################################################################################
# Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The OpenAirInterface Software Alliance licenses this file to You under
# the Apache License, Version 2.0  (the "License"); you may not use this file
# except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the OpenAirInterface (OAI) Software Alliance:
#      contact@openairinterface.org
################################################################################

# file build_helper.hss
# brief
# author Laurent Thomas, Lionel GAUTHIER
#
#######################################
################################
# include helper functions
################################
SCRIPT=$(readlink -f ${BASH_SOURCE})
THIS_SCRIPT_PATH=`dirname $SCRIPT`
source $THIS_SCRIPT_PATH/build_helper
source $THIS_SCRIPT_PATH/build_helper.fd


#-------------------------------------------------------------------------------
#arg1 is force (no interactive script)
check_install_hss_software() {
  if ! check_supported_distribution; then
    echo_error "Your distribution $(get_distribution_release) is not supported by openair-cn"
    exit 1
  fi
  if [ $1 -gt 0 ]; then 
    OPTION="-y"
  else
    OPTION=""
  fi

  check_enable_epel_repos

  # Compilers, generators, ...
  if [[ $OS_DISTRO == "ubuntu" ]]; then
    PACKAGE_LIST="\
      autoconf \
      automake \
      bison \
      build-essential \
      cmake \
      cmake-curses-gui \
      doxygen \
      doxygen-gui \
      flex \
      gdb \
      git"
  elif [[ "$OS_BASEDISTRO" == "fedora" ]]; then
    PACKAGE_LIST="\
      autoconf  \
      automake  \
      bison     \
      $CMAKE \
      doxygen \
      flex  \
      gdb  \
      pkgconfig \
      git"
  else
    echo_fatal "$OS_DISTRO is not a supported distribution."
  fi
  $SUDO $INSTALLER install $OPTION $PACKAGE_LIST
  ret=$?;[[ $ret -ne 0 ]] && return $ret

  # Libraries
  if [[ $OS_DISTRO == "ubuntu" ]]; then
    case "$(get_distribution_release)" in
	"ubuntu14.04" | "ubuntu16.04" | "ubuntu17.04" | "ubuntu17.10")
	    specific_packages="libconfig8-dev"
	    ;;
	"ubuntu18.04")
	    specific_packages="libconfig-dev"
	    ;;
    esac
    PACKAGE_LIST="\
      $specific_packages \
      libgcrypt11-dev \
      libidn2-0-dev \
      libidn11-dev \
      libmysqlclient-dev \
      libpthread-stubs0-dev \
      libsctp1 \
      libsctp-dev \
      libssl-dev \
      libtool \
      mysql-client \
      mysql-server \
      openssl"
  elif [[ "$OS_BASEDISTRO" == "fedora" ]]; then
    PACKAGE_LIST="\
      libconfig-devel \
      libgcrypt-devel \
      libidn2-devel \
      libidn-devel \
      lksctp-tools \
      lksctp-tools-devel \
      openssl-devel \
      libtool \
      mariadb \
      mariadb-devel \
      mariadb-server \
      openssl \
      nettle-devel \
      gnutls-devel"
  else
    echo_fatal "$OS_DISTRO is not a supported distribution."
  fi
  $SUDO $INSTALLER install $OPTION $PACKAGE_LIST
  ret=$?;[[ $ret -ne 0 ]] && return $ret

  if [[ $OS_BASEDISTRO == 'fedora' ]]; then
    $SUDO systemctl enable mariadb
    $SUDO systemctl start mariadb
  fi

  if [[ $OS_DISTRO == 'ubuntu' ]]; then
    #Remove old gnutls/nettle installation that was done from sources
    remove_nettle_from_source
    $SUDO $INSTALLER install -y nettle-dev nettle-bin
    ret=$?;[[ $ret -ne 0 ]] && return $ret
  fi

  install_freediameter_from_source $1
  ret=$?;[[ $ret -ne 0 ]] && return $ret

  case "$(get_distribution_release)" in
    "ubuntu14.04")
      PACKAGE_LIST="\
        python-mysqldb \
        pkg-config"
      ;;
    "ubuntu16.04" | "ubuntu17.04" | "ubuntu17.10" | "ubuntu18.04")
      PACKAGE_LIST="\
        python-pexpect \
        python-mysqldb"
      ;;
    "rhel7" | "centos7")
      PACKAGE_LIST="\
        pexpect"
      ;;
    "fedora")
      PACKAGE_LIST="\
        python2-pexpect"
      ;;
    *)
      echo_fatal "$OS_DISTRO is not a supported distribution."
      ;;
  esac

  $SUDO $INSTALLER install $OPTION $PACKAGE_LIST
  return $? 
}

