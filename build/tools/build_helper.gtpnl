################################################################################
# Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The OpenAirInterface Software Alliance licenses this file to You under
# the Apache License, Version 2.0  (the "License"); you may not use this file
# except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the OpenAirInterface (OAI) Software Alliance:
#      contact@openairinterface.org
################################################################################

# file build_helper
# brief
# author Laurent Thomas, Lionel GAUTHIER
#
#######################################
SCRIPT=$(readlink -f ${BASH_SOURCE})
THIS_SCRIPT_PATH=`dirname $SCRIPT`
source $THIS_SCRIPT_PATH/build_helper



#-------------------------------------------------------------------------------
install_gtp_mark_kernel_module() {
  if [ $1 -gt 0 ]; then
    OPTION="-y"
  else
    OPTION=""
  fi
  
  if [ $1 -eq 0 ]; then
    read -p "Do you want to install modified GTP kernel module for dedicated bearer , no OVS support ? <y/N> " prompt
  else
    prompt='y'
  fi
  if [[ $prompt =~ [yY](es)* ]]
  then
    $SUDO modprobe --remove gtp
      
    $SUDO rm -rf /tmp/gtp
    mkdir /tmp/gtp
    cd /tmp/gtp
    echo 'OVS: Cloning openair-cn-extras'
    git clone https://github.com/OPENAIRINTERFACE/openair-cn-extras.git
    ret=$?;[[ $ret -ne 0 ]] && return $ret

    cd openair-cn-extras/linux-4.13-gtp-module
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    make -C /lib/modules/`uname -r`/build M=$PWD
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    sudo cp gtp.ko /lib/modules/`uname -r`/kernel/drivers/net/gtp.ko
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    $SUDO depmod -a
    
    $SUDO modprobe udp_tunnel
    $SUDO modprobe ip6_udp_tunnel
    $SUDO modprobe gtp
    ret=$?;[[ $ret -ne 0 ]] && return $ret
  fi
  return 0
}


#-------------------------------------------------------------------------------
install_libgtpnl_from_source() {
  if [ $1 -gt 0 ]; then
    OPTION="-y"
  else
    OPTION=""
  fi

  # Compilers, generators, ...
  if [[ "$OS_DISTRO" == "ubuntu" ]]; then
    PACKAGE_LIST="\
      autoconf \
      automake \
      build-essential \
      libmnl-dev"
  elif [[ "$OS_BASEDISTRO" == "fedora" ]]; then
    PACKAGE_LIST="\
      autoconf \
      automake \
      bison \
      patch \
      flex \
      gcc \
      libmnl-devel"
  else
    echo_fatal "$OS_DISTRO is not a supported distribution."
  fi
  $SUDO $INSTALLER install $OPTION $PACKAGE_LIST
  if [ $1 -eq 0 ]; then
    read -p "Do you want to install libgtpnl ? <y/N> " prompt
  else
    prompt='y'
  fi
  if [[ $prompt =~ [yY](es)* ]]
  then
    cd /tmp
    echo "Downloading libgtpnl archive"
    $SUDO rm -rf /tmp/libgtpnl*
    git clone git://git.osmocom.org/libgtpnl
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    cd libgtpnl
    git reset --hard 345d687
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    patch --verbose -p1  < $OPENAIRCN_DIR/build/tools/libgtpnl.LTE_dedicated_bearer.v0.patch 
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    autoreconf -fi
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    ./configure
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    echo "Compiling libgtpnl"
    make -j`nproc`
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    $SUDO make install
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    $SUDO ldconfig
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    cd /tmp
    $SUDO rm -rf /tmp/libgtpnl*
  fi
  return 0
}


